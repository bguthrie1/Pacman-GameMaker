<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>TeleportTile_spr</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>9</depth>
  <persistent>0</persistent>
  <parentName>TileObj</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Remote = noone;
var i; i = 0;
while(instance_find(object_index,i) &lt;&gt; id)
{
//show_message("Count" + string(instance_find(object_index,i)))
    i+=1;
}

if((i mod 2) == 1)
{
    with(instance_find(object_index,i-1)) Remote = other.id;
    Remote = instance_find(object_index,i-1);
    //show_message(string(i))
}

//show_message("Set" + string(Remote))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="DemoPackmanObj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Remote == noone) exit;
with(other)
{
    if(point_distance(x,y,other.x+6,other.y+6)&lt;6)
    {
        //center of tiel x+6 the on edge beyond the point
        //where point_distance &lt;6 would trigger the other tile port
        x = other.Remote.x+6 + lengthdir_x(6, direction);
        y = other.Remote.y+6 + lengthdir_y(6, direction);
        //lasttile = other.Remote;
        lasttile = noone;
        //path_end();
        event_perform(ev_other,ev_end_of_path);
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="PackmanObj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Remote == noone) exit;
with(other)
{
    if(point_distance(x,y,other.x+6,other.y+6)&lt;6)
    {
        //center of tiel x+6 the on edge beyond the point
        //where point_distance &lt;6 would trigger the other tile port
        x = other.Remote.x+6 + 6 * sign(hspeed);
        y = other.Remote.y+6 + 6 * sign(vspeed);
        lasttile = other.Remote;
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ParentGhostObj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Remote == noone) exit;
with(other)
{
    if(point_distance(x,y,other.x+6,other.y+6)&lt;6)
    {
        //center of tiel x+6 the on edge beyond the point
        //where point_distance &lt;6 would trigger the other tile port
        x = other.Remote.x+6 + lengthdir_x(6, direction);
        y = other.Remote.y+6 + lengthdir_y(6, direction);
        //lasttile = other.Remote;
        lasttile = noone;
        //path_end();
        event_perform(ev_other,ev_end_of_path);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>6,6</point>
  </PhysicsShapePoints>
</object>
