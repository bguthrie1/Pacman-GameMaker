<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>InkyTarget3_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>



var Blinkyx, Blinkyy, BlinkyVector, VectorDirection;


// Get Blinky's position

if (instance_exists(BlinkyObj))
{
    Blinkyx = BlinkyObj.x
    Blinkyy = BlinkyObj.y
}
else
{
    with(BlueGhostObj)
    {
        if (WhoIWas = BlinkyObj)
        {
            Blinkyx = x
            Blinkyy = y
        }
    }
    with(GhostEyesObj)
    {
        if (WhoIWas = BlinkyObj)
        {
            Blinkyx = x
            Blinkyy = y
        }
    }
}



// Without the offset bug
/*
BlinkyVector = point_distance(Blinkyx, Blinkyy, PackmanObj.x + lengthdir_x(12*2,PackmanObj.direction), PackmanObj.y + lengthdir_y(12*2,PackmanObj.direction))
VectorDirection = point_direction(Blinkyx, Blinkyy, PackmanObj.x + lengthdir_x(12*2,PackmanObj.direction), PackmanObj.y + lengthdir_y(12*2,PackmanObj.direction))


x = (PackmanObj.x + lengthdir_x(12*2,PackmanObj.direction)) + lengthdir_x(BlinkyVector, VectorDirection)
y = (PackmanObj.y + lengthdir_y(12*2,PackmanObj.direction)) + lengthdir_y(BlinkyVector, VectorDirection)
*/

// With the offset bug


if (PackmanObj.direction != 90)
{
    BlinkyVector = point_distance(Blinkyx, Blinkyy, PackmanObj.x + lengthdir_x(12*2,PackmanObj.direction), PackmanObj.y + lengthdir_y(12*2,PackmanObj.direction))
    VectorDirection = point_direction(Blinkyx, Blinkyy, PackmanObj.x + lengthdir_x(12*2,PackmanObj.direction), PackmanObj.y + lengthdir_y(12*2,PackmanObj.direction))
    x = (PackmanObj.x + lengthdir_x(12*2,PackmanObj.direction)) + lengthdir_x(BlinkyVector, VectorDirection)
    y = (PackmanObj.y + lengthdir_y(12*2,PackmanObj.direction)) + lengthdir_y(BlinkyVector, VectorDirection)
}
else
{
    BlinkyVector = point_distance(Blinkyx, Blinkyy, PackmanObj.x + lengthdir_x(12*2,PackmanObj.direction) + lengthdir_x(12*2,180), PackmanObj.y + lengthdir_y(12*2,PackmanObj.direction) + lengthdir_y(12*2,180))
    VectorDirection = point_direction(Blinkyx, Blinkyy, PackmanObj.x + lengthdir_x(12*2,PackmanObj.direction) + lengthdir_x(12*2,180), PackmanObj.y + lengthdir_y(12*2,PackmanObj.direction) + lengthdir_y(12*2,180))
    x = (PackmanObj.x + lengthdir_x(12*2,PackmanObj.direction) + lengthdir_x(12*2,180)) + lengthdir_x(BlinkyVector, VectorDirection)
    y = (PackmanObj.y + lengthdir_y(12*2,PackmanObj.direction) + lengthdir_y(12*2,180)) + lengthdir_y(BlinkyVector, VectorDirection)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,12</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
